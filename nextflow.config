nextflow.enable.dsl = 2

params {
    // Default project directory
    reads = "$projectDir/input"
    // Default output directory
    output = "$projectDir/output"
    
    // Default databases directory for saving all the required databases
    db = "$projectDir/databases"

    // Default assembler
    assembler = "shovill"
    // Default assembler thread count (0 means all)
    assembler_thread = 0
    // Default minimum contig length
    min_contig_length = 500
    // Default assembly publish mode
    assembly_publish = "link"

    // Default link for Kraken2 Database, and usage of memory mapping
    kraken2_db_remote = "https://genome-idx.s3.amazonaws.com/kraken/minikraken2_v1_8GB_201904.tgz"
    kraken2_memory_mapping = false
    //read lenth for bracken
    read_len = 150
    classification_level = 'S'
    threshold = 10
    // Default referece genome assembly path for its BWA database 
    ref_genome = "$projectDir/data/CP129876.1.fasta"
    
    // Default values for QC
    sagalactiae_percentage = 70.00
    top_non_agalactiae_species_percentage = 2.00
    ref_coverage = 70.0
    het_snp_site = 40
    contigs = 500
    length_low = 1400000
    length_high = 2800000
    depth = 20.00
   

    // Toggle for removing .bam and .sam files mid-run to reduce storage requirement
    // Warning: This will break the -resume function of Nextflow  
    lite = false
}


// Set auto-retry and process container images
process {
   maxRetries = 2
    errorStrategy = { task.attempt <= process.maxRetries ? 'retry' : 'ignore' }
   
   withLabel: bash_container {
         container = 'wbitt/network-multitool:340b0bd'
   }
   withLabel: python_container {
         container = 'amancevice/pandas:2.2.2'
   }
   withLabel: fastp_container {
         container = 'staphb/fastp:0.24.1'
   }
   withLabel: shovill_container {
         container = 'staphb/shovill:1.1.0-2022Dec'
   }
   withLabel: unicycler_container {
         container = 'staphb/unicycler:0.5.1'
   }
   withLabel: quast_container {
         container = 'staphb/quast:5.2.0'//all tags from staphb dont support ARM64
   }
   withLabel: bwa_container {
         container = 'staphb/bwa:0.7.19' //all tags from staphb dont support ARM64
   }
   withLabel: samtools_container { // all tags from staphb dont support ARM64
         container = 'staphb/samtools:1.21'
   }
   withLabel: bcftools_container {
         container = 'staphb/bcftools:1.22'
   }
   withLabel: kraken2_container {
         container = 'staphb/kraken2:2.1.5'
   }
   withLabel: bracken_container {
         container = 'staphb/bracken:3.1'
   }

}

// Set parameters of different run environments
profiles {
   
   // Default Profile for local execution
   standard {
      process{
        executor = 'local'
      }
      docker {
      enabled = true
      runOptions = '-u $(id -u):$(id -g)'
      }
   
   }

   // Alternative Profile for local machine
   // Singularity as container engine, executor by local machine
   singularity {
      params.singularity_cachedir = "$projectDir/singularity_cache"

      singularity {
         enabled = true
         autoMounts = true
         cacheDir = params.singularity_cachedir
      }

   }

   // Profile for LSF, tested on Sanger farm5
   // Singularity as container engine, execute by LSF
   lsf {
        params.singularity_cachedir = "$projectDir/singularity_cache"
        params.kraken2_memory_mapping = false

        process {
            executor = 'lsf'
            scratch = true
            time = {30.min * task.attempt}
            maxRetries = 4

            withLabel: farm_low {
                cpus = 1
                memory = {1.GB * task.attempt}
            }
            withLabel: farm_mid {
                cpus = 8
                memory = {4.GB * task.attempt}
            }
            withLabel: farm_high {
                cpus = 32
                memory = {16.GB * task.attempt}
            }
            withLabel: farm_slow {
                time = {2.hour * task.attempt}
            }
            withLabel: farm_scratchless {
                scratch = false
            }
            withLabel: farm_local {
                executor = 'local'
            }
        }
        executor {
            perJobMemLimit = true
        }
        singularity {
            enabled = true
            autoMounts = true
            cacheDir = params.singularity_cachedir
        }
    }

}